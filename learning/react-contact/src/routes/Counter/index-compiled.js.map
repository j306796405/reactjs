{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;AAAA;;kBAEe,UAAC,KAAD;AAAA,SAAY;AACzB,UAAM,SADmB;;AAGzB,gBAHyB,wBAGX,SAHW,EAGA,EAHA,EAGI;;;AAG3B,cAAQ,MAAR,CAAe,EAAf,EAAmB,UAAC,OAAD,EAAa;;;AAG9B,YAAM,UAAU,QAAQ,+BAAR,EAAyC,OAAzD;AACA,YAAM,UAAU,QAAQ,mBAAR,EAA6B,OAA7C;;;AAGA,qCAAc,KAAd,EAAqB,EAAE,KAAK,SAAP,EAAkB,gBAAlB,EAArB;;;AAGA,WAAG,IAAH,EAAS,OAAT;;;AAGD,OAbD,EAaG,SAbH;AAcD;AApBwB,GAAZ;AAAA,C","file":"index-compiled.js","sourcesContent":["import { injectReducer } from '../../store/reducers'\r\n\r\nexport default (store) => ({\r\n  path: 'counter',\r\n  /*  Async getComponent is only invoked when route matches   */\r\n  getComponent (nextState, cb) {\r\n    /*  Webpack - use 'require.ensure' to create a split point\r\n        and embed an async module loader (jsonp) when bundling   */\r\n    require.ensure([], (require) => {\r\n      /*  Webpack - use require callback to define\r\n          dependencies for bundling   */\r\n      const Counter = require('./containers/CounterContainer').default\r\n      const reducer = require('./modules/counter').default\r\n\r\n      /*  Add the reducer to the store on key 'counter'  */\r\n      injectReducer(store, { key: 'counter', reducer })\r\n\r\n      /*  Return getComponent   */\r\n      cb(null, Counter)\r\n\r\n    /* Webpack named bundle   */\r\n    }, 'counter')\r\n  }\r\n})\r\n"]}