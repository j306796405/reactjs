{"version":3,"sources":["main.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;AAKA,IAAM,iBAAiB,mEAAuC;AAC5D,YAAU;AADkD,CAAvC,CAAvB;;;;;;;;;AAWA,IAAM,eAAe,OAAO,kBAA5B;AACA,IAAM,QAAQ,2BAAY,YAAZ,EAA0B,cAA1B,CAAd;AACA,IAAM,UAAU,4CAAqB,cAArB,EAAqC,KAArC,EAA4C;AAC1D,uBAAqB,6BAAC,KAAD;AAAA,WAAW,MAAM,MAAjB;AAAA;AADqC,CAA5C,CAAhB;;;;;AAOA,IAAI,SAAJ,EAAe;AACb,MAAI,OAAO,iBAAX,EAA8B;AAC5B,WAAO,iBAAP,CAAyB,IAAzB;AACD;AACF;;;;;AAKD,IAAM,aAAa,SAAS,cAAT,CAAwB,MAAxB,CAAnB;;AAEA,IAAI,SAAS,kBAAM;AACjB,MAAM,SAAS,QAAQ,gBAAR,EAA0B,OAA1B,CAAkC,KAAlC,CAAf;;AAEA,qBAAS,MAAT,CACE;AACE,WAAO,KADT;AAEE,aAAS,OAFX;AAGE,YAAQ;AAHV,IADF,EAME,UANF;AAQD,CAXD;;;AAcA,IAAI,OAAJ,EAAa;AACX,MAAI,OAAO,GAAX,EAAgB;AAAA;AACd,UAAM,YAAY,MAAlB;AACA,UAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAW;AAC7B,YAAM,SAAS,QAAQ,cAAR,EAAwB,OAAvC;;AAEA,2BAAS,MAAT,CAAgB,8BAAC,MAAD,IAAQ,OAAO,KAAf,GAAhB,EAA0C,UAA1C;AACD,OAJD;;;AAOA,eAAS,kBAAM;AACb,YAAI;AACF;AACD,SAFD,CAEE,OAAO,KAAP,EAAc;AACd,sBAAY,KAAZ;AACD;AACF,OAND;;AAQA,aAAO,GAAP,CAAW,MAAX,CAAkB,CAAC,gBAAD,CAAlB,EAAsC,YAAM;AAC1C,mBAAW,YAAM;AACf,6BAAS,sBAAT,CAAgC,UAAhC;AACA;AACD,SAHD;AAID,OALD;AAjBc;AAuBf;AACF;;;;;AAKD","file":"main-compiled.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport createBrowserHistory from 'history/lib/createBrowserHistory'\r\nimport { useRouterHistory } from 'react-router'\r\nimport { syncHistoryWithStore } from 'react-router-redux'\r\nimport createStore from './store/createStore'\r\nimport AppContainer from './containers/AppContainer'\r\n\r\n// ========================================================\r\n// Browser History Setup\r\n// ========================================================\r\nconst browserHistory = useRouterHistory(createBrowserHistory)({\r\n  basename: __BASENAME__\r\n})\r\n\r\n// ========================================================\r\n// Store and History Instantiation\r\n// ========================================================\r\n// Create redux store and sync with react-router-redux. We have installed the\r\n// react-router-redux reducer under the routerKey \"router\" in src/routes/index.js,\r\n// so we need to provide a custom `selectLocationState` to inform\r\n// react-router-redux of its location.\r\nconst initialState = window.___INITIAL_STATE__\r\nconst store = createStore(initialState, browserHistory)\r\nconst history = syncHistoryWithStore(browserHistory, store, {\r\n  selectLocationState: (state) => state.router\r\n})\r\n\r\n// ========================================================\r\n// Developer Tools Setup\r\n// ========================================================\r\nif (__DEBUG__) {\r\n  if (window.devToolsExtension) {\r\n    window.devToolsExtension.open()\r\n  }\r\n}\r\n\r\n// ========================================================\r\n// Render Setup\r\n// ========================================================\r\nconst MOUNT_NODE = document.getElementById('root')\r\n\r\nlet render = () => {\r\n  const routes = require('./routes/index').default(store)\r\n\r\n  ReactDOM.render(\r\n    <AppContainer\r\n      store={store}\r\n      history={history}\r\n      routes={routes}\r\n    />,\r\n    MOUNT_NODE\r\n  )\r\n}\r\n\r\n// This code is excluded from production bundle\r\nif (__DEV__) {\r\n  if (module.hot) {\r\n    const renderApp = render\r\n    const renderError = (error) => {\r\n      const RedBox = require('redbox-react').default\r\n\r\n      ReactDOM.render(<RedBox error={error} />, MOUNT_NODE)\r\n    }\r\n\r\n    // Wrap render in try/catch\r\n    render = () => {\r\n      try {\r\n        renderApp()\r\n      } catch (error) {\r\n        renderError(error)\r\n      }\r\n    }\r\n\r\n    module.hot.accept(['./routes/index'], () => {\r\n      setTimeout(() => {\r\n        ReactDOM.unmountComponentAtNode(MOUNT_NODE)\r\n        render()\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ========================================================\r\n// Go!\r\n// ========================================================\r\nrender()\r\n"]}