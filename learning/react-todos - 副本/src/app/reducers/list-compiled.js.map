{"version":3,"sources":["list.js"],"names":[],"mappings":";;;;;AAKA;;;;;;AAEA;;IAAY,K;;;;;;AAEZ,IAAI,UAAU,SAAV,OAAU,OAAQ;AACpB,MAAI,OAAO,KAAK,GAAL,EAAX;;AAEA,SAAO;AACL,QAAI,KAAK,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,KAA3B,CAAiC,GAAjC,EAAsC,IAAtC,CAA2C,EAA3C,CADC;AAEL,aAAS,IAFJ;AAGL,gBAAY,IAHP;AAIL,cAJK;AAKL,YAAQ;AALH,GAAP;AAOD,CAVD;;AAYA,IAAI,aAAa,SAAb,UAAa,CAAC,KAAD,EAAQ,EAAR,EAAe;AAC9B,SAAO,MAAM,MAAN,CAAa,gBAAQ;AAC1B,WAAO,KAAK,EAAL,KAAY,EAAnB;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAI,mBAAmB,SAAnB,gBAAmB,CAAC,KAAD,EAAQ,IAAR,EAAiB;AACtC,SAAO,MAAM,GAAN,CAAU,gBAAQ;AACvB,QAAG,KAAK,EAAL,KAAY,KAAK,EAApB,EAAuB;AACrB,WAAK,MAAL,GAAc,KAAK,MAAnB;AACD;AACD,WAAO,IAAP;AACD,GALM,CAAP;AAMD,CAPD;;AASA,IAAI,oBAAoB,SAApB,iBAAoB,CAAC,KAAD,EAAQ,MAAR,EAAmB;AACzC,SAAO,MAAM,GAAN,CAAU,gBAAQ;AACvB,SAAK,MAAL,GAAc,MAAd;AACA,WAAO,IAAP;AACD,GAHM,CAAP;AAID,CALD;;kBAOe,YAAwB;AAAA,MAAvB,KAAuB,yDAAf,EAAe;AAAA,MAAX,MAAW;;AACrC,UAAQ,OAAO,IAAf;AACE,SAAK,MAAM,QAAX;AACE,0CAAW,KAAX,IAAkB,QAAQ,OAAO,IAAf,CAAlB;;AAEF,SAAK,MAAM,WAAX;AACE,aAAO,WAAW,KAAX,EAAkB,OAAO,EAAzB,CAAP;;AAEF,SAAK,MAAM,kBAAX;AACE,aAAO,iBAAiB,KAAjB,EAAwB,OAAO,IAA/B,CAAP;;AAEF,SAAK,MAAM,mBAAX;AACE,aAAO,kBAAkB,KAAlB,EAAyB,OAAO,MAAhC,CAAP;;AAEF;AACE,aAAO,KAAP;AAdJ;AAgBD,C","file":"list-compiled.js","sourcesContent":["/**\n * FileName list\n * Date 2016-08-01\n * Created by jianglinj\n */\n'use strict'\n\nimport * as types from './../constants/ActionTypes';\n\nlet addItem = text => {\n  let time = Date.now();\n\n  return {\n    id: Math.random().toString(36).split('.').join(''),\n    addTime: time,\n    updateTime: time,\n    text,\n    status: false\n  }\n}\n\nlet deleteItem = (state, id) => {\n  return state.filter(todo => {\n    return todo.id !== id;\n  })\n}\n\nlet updateItemStatus = (state, data) => {\n  return state.map(todo => {\n    if(todo.id === data.id){\n      todo.status = data.status;\n    }\n    return todo;\n  })\n}\n\nlet updateItemsStatus = (state, status) => {\n  return state.map(todo => {\n    todo.status = status;\n    return todo;\n  })\n}\n\nexport default (state = [], action) => {\n  switch (action.type){\n    case types.ADD_ITEM:\n      return [...state, addItem(action.text)];\n\n    case types.DELETE_ITEM:\n      return deleteItem(state, action.id);\n\n    case types.UPDATE_ITEM_STATUS:\n      return updateItemStatus(state, action.data);\n\n    case types.UPDATE_ITEMS_STATUS:\n      return updateItemsStatus(state, action.status);\n\n    default:\n      return state\n  }\n}\n"]}