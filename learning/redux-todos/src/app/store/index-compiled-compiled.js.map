{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;;AAIA,IAAI,SAAS,QAAQ,OAAR,CAAb;;AAEA,IAAI,SAAS,QAAQ,qBAAR,CAAb;;AAEA,IAAI,UAAU,uBAAuB,MAAvB,CAAd;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;;;;;;AAO/F,QAAQ,OAAR,GAAkB,UAAU,YAAV,EAAwB;AACxC,SAAO,CAAC,GAAG,OAAO,WAAX,EAAwB,QAAQ,OAAhC,EAAyC,YAAzC,CAAP;AACD,CAFD","file":"index-compiled-compiled.js","sourcesContent":["/**\n * FileName index.js\n * Date 2016-08-01\n * Created by jianglinj\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _redux = require('redux');\n\nvar _index = require('./../reducers/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * reducer (Function): 接收两个参数，分别是当前的 state 树和要处理的 action，返回新的 state 树。\n * [initialState] (any): 初始时的 state。 在同构应用中，你可以决定是否把服务端传来的 state 水合（hydrate）后传给它，或者从之前保存的用户会话中恢复一个传给它。如果你使用 combineReducers 创建 reducer，它必须是一个普通对象，与传入的 keys 保持同样的结构。否则，你可以自由传入任何 reducer 可理解的内容。\n * */\n\nexports.default = function (initialState) {\n  return (0, _redux.createStore)(_index2.default, initialState);\n};\n\n//# sourceMappingURL=index-compiled.js.map"]}