{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;;QAqBgB,iB,GAAA,iB;QAYA,a,GAAA,a;;AA/BhB;;AACA;;AACA;;;;;;;;;AAKA,IAAM,eAAe;AACjB;AADiB,CAArB;;;;;AAOA,IAAM,gBAAgB,EAAtB;;;;;AAKO,SAAS,iBAAT,GAA6B;AAChC,WAAO,uDACA,YADA,EAEA,aAFA,EAAP;AAIH;;;;;;;AAOM,SAAS,aAAT,CAAuB,GAAvB,EAA4B,OAA5B,EAAqC;AACxC,kBAAc,GAAd,IAAqB,OAArB;AACA,oBAAM,cAAN,CAAqB,mBAArB,E;AACH","file":"index-compiled.js","sourcesContent":["/**\r\n * FileName index\r\n * Date 2016-09-13\r\n * Created by jianglinj\r\n */\r\n'use strict'\r\n\r\nimport { combineReducers } from 'redux'\r\nimport { routerReducer } from 'react-router-redux'\r\nimport store from 'STORE'\r\n\r\n// ================================\r\n// 同步的 Reducers（即应用初始化所必需的） ?????\r\n// ================================\r\nconst syncReducers = {\r\n    router: routerReducer\r\n}\r\n\r\n// ================================\r\n// 异步加载的 Reducers（Code Splitting 按需加载的）\r\n// ================================\r\nconst asyncReducers = {}\r\n\r\n/**\r\n * @return {Function} rootReducer\r\n */\r\nexport function createRootReducer() {\r\n    return combineReducers({\r\n        ...syncReducers,\r\n        ...asyncReducers\r\n    })\r\n}\r\n\r\n/**\r\n * 按需加载时，立即注入对应的 Reducer\r\n * @param  {String}   key\r\n * @param  {Function} reducer\r\n */\r\nexport function injectReducer(key, reducer) {\r\n    asyncReducers[key] = reducer\r\n    store.replaceReducer(createRootReducer()) // 替换当前的 rootReducer\r\n}"]}