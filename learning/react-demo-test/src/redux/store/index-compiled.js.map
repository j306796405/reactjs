{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;AAKA;;;;;;;AAEA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;AAKA,IAAM,iBAAiB,mEAAuC;AAC1D,cAAU,E;AADgD,CAAvC,CAAvB;;;;;AAOA,IAAM,cAAc,uBAAQ,wCAAiB,cAAjB,CAAR,CAApB;AACA,IAAI,OAAJ,EAAa;;AAET,QAAM,eAAe,QAAQ,cAAR,CAArB;AACA,gBAAY,IAAZ,CAAiB,cAAjB;AACH;;;;;AAKD,IAAM,YAAY,EAAlB;AACA,IAAI,OAAJ,EAAa;;;;;AAKT,QAAI,CAAC,sBAAL,EAA6B;AACzB,YAAM,oBAAoB,OAAO,iBAAjC;AACA,YAAI,OAAO,iBAAP,KAA6B,UAAjC,EAA6C;AACzC,sBAAU,IAAV,CAAe,mBAAf;AACH;AACJ;;;AAGD,QAAI,sBAAJ,EAA4B;AACxB,YAAM,WAAW,QAAQ,oBAAR,EAA8B,OAA/C;AACA,kBAAU,IAAV,CAAe,SAAS,UAAT,EAAf;AACH;AACJ;;;;;AAKM,IAAM,wBAAQ,wBACjB,iCADiB,EAEjB,OAAO,iBAAP,IAA4B,EAFX,E;AAGjB,iCACI,wCAAmB,WAAnB,CADJ,SAEO,SAFP,EAHiB,CAAd;;;;;AAYA,IAAM,4BAAU,4CACnB,cADmB,EAEnB,KAFmB,EAGnB,EAAE,qBAAqB,6BAAC,KAAD;AAAA,eAAW,MAAM,MAAjB;AAAA,KAAvB,EAHmB,CAAhB;;kBAMQ,K","file":"index-compiled.js","sourcesContent":["/**\r\n * FileName index\r\n * Date 2016-09-13\r\n * Created by jianglinj\r\n */\r\n'use strict'\r\n\r\nimport { routerMiddleware, syncHistoryWithStore } from 'react-router-redux'\r\nimport createBrowserHistory from 'history/lib/createBrowserHistory'\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport { useRouterHistory } from 'react-router'\r\nimport thunk from 'redux-thunk'\r\nimport { createRootReducer } from 'REDUCER'\r\n\r\n// ========================================================\r\n// 浏览器 history 配置\r\n// ========================================================\r\nconst browserHistory = useRouterHistory(createBrowserHistory)({\r\n    basename: '' // 相当于 rootPath\r\n})\r\n\r\n// ======================================================\r\n// 配置中间件\r\n// ======================================================\r\nconst middlewares = [thunk, routerMiddleware(browserHistory)]\r\nif (__DEV__) {\r\n    /** Redux Logger (P.S: 打印日志会造成轻微的卡顿) **/\r\n    const createLogger = require('redux-logger')\r\n    middlewares.push(createLogger())\r\n}\r\n\r\n// ======================================================\r\n// 配置 Store 增强器\r\n// ======================================================\r\nconst enhancers = []\r\nif (__DEV__) {\r\n    /** Redux DevTools **/\r\n\r\n    /* 1. Chrome 插件 Redux DevTools（默认）\r\n     P.S: 独立窗口可调用 window.devToolsExtension.open() */\r\n    if (!__COMPONENT_DEVTOOLS__) {\r\n        const devToolsExtension = window.devToolsExtension\r\n        if (typeof devToolsExtension === 'function') {\r\n            enhancers.push(devToolsExtension())\r\n        }\r\n    }\r\n\r\n    /* 2. 内嵌在页面中的 Redux DevTools 组件 */\r\n    if (__COMPONENT_DEVTOOLS__) {\r\n        const DevTools = require('COMPONENT/DevTools').default\r\n        enhancers.push(DevTools.instrument())\r\n    }\r\n}\r\n\r\n// ======================================================\r\n// 实例化 Store\r\n// ======================================================\r\nexport const store = createStore(\r\n    createRootReducer(),\r\n    window.__INITIAL_STATE__ || {}, // 前后端同构（服务端渲染）数据同步\r\n    compose(\r\n        applyMiddleware(...middlewares),\r\n        ...enhancers\r\n    )\r\n)\r\n\r\n// ======================================================\r\n// 配置 history 同步\r\n// ======================================================\r\nexport const history = syncHistoryWithStore(\r\n    browserHistory,\r\n    store,\r\n    { selectLocationState: (state) => state.router }\r\n)\r\n\r\nexport default store\r\n"]}